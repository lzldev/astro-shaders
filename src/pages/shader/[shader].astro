---
import ShaderCanvas from "../../components/ShaderCanvas.astro";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const shaders = import.meta.glob("../../assets/shaders/*.frag");

  const files = Object.keys(shaders).map((key) =>
    key.split("/").at(-1)?.split(".").slice(0, -1).join("")
  );

  return files.map((file) => ({
    params: {
      shader: file,
    },
  }));
}
const { shader } = Astro.params;
---

<Layout>
  <div style="display:flex;width:100%;height:100%;justify-content:center;">
    <ShaderCanvas shader={shader + ".frag"} width="900" height="900" />
  </div>
</Layout>
<script>
  const body = document.querySelector<HTMLBodyElement>("body")!;
  const canvas = document.querySelector<HTMLCanvasElement>("body>div>canvas")!;
  const l = canvas.getContext("webgl")!;
  console.log(canvas, l);

  const s = new URLSearchParams(window.location.search);
  console.log(s.get("full"));

  function resizeCanvas() {
    let zoom = (window.outerWidth - 10) / window.innerWidth;
    const h = window.innerHeight - 12;
    const w = window.innerWidth;

    const w2 = s.get("full") != null ? w - 24 : Math.min(h, w);

    canvas.width = w2;
    canvas.height = h;

    //l.viewport(0, 0, w2, h);
  }

  resizeCanvas();
  window.addEventListener("resize", () => resizeCanvas());
</script>
